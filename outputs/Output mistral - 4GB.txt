 Here's an example `docker-compose.yml` file that sets up an Nginx server with a PostgreSQL database:

```yaml
version: '3'
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - db_data:persistent

  web:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - db

  php:
    image: php:7.4-fpm
    volumes:
      - ./php:/var/www/html
    depends_on:
      - db

volumes:
  db_data:
```

In this example, we have three services: `db`, `web`, and `php`. The `db` service runs the latest version of PostgreSQL and sets environment variables for the username, password,       
and database name. It also defines a volume named `db_data` that is persistent.

The `web` service runs the latest version of Nginx and maps port 80 on the host to port 80 in the container. It mounts the `nginx.conf` file from the current directory to the
container's `/etc/nginx/nginx.conf`. The `web` service depends on the `db` service, which means it won't start until the database is up and running.

The `php` service runs the PHP 7.4 FPM image and also mounts a volume named `php` to the container's `/var/www/html`. It too depends on the `db` service.

You should replace the environment variables for the PostgreSQL database with your own values, and create an `nginx.conf` file in the current directory if you wish to configure         
Nginx further. You may also need to adjust the PHP image depending on your requirements.
